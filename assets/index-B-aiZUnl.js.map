{"version":3,"file":"index-B-aiZUnl.js","sources":["../../../../node_modules/.pnpm/react-dom@18.3.1_react@18.3.1/node_modules/react-dom/client.js","../../../../apps/podcast/src/main.tsx"],"sourcesContent":["'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from './app/app';\nimport { QueryClientProvider } from '@tanstack/react-query';\nimport { queryClient } from '@inditex/api';\nimport './styles.scss';\n\nconst root = ReactDOM.createRoot(document.getElementById('podcast-root') as HTMLElement);\n\nroot.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </QueryClientProvider>\n  </React.StrictMode>\n);\n"],"names":["require$$0","ReactDOM","jsx"],"mappings":";;;;;;;AAEA,IAAI,CAAA,GAAIA,eAAmB;AACgB;AACzC,sBAAqB,CAAE,CAAA,UAAA;AACvB,uBAAsB,CAAE,CAAA,WAAA;AAC1B;;ACNA,MAAA,KAAA,GAAA,MAAA,YAAA,CAAA,OAAA,CAAA;AAEA,MAAA,CAAA,aAAA,CAAA,GAAA,MAAA,YAAA,CAAA,kBAAA,CAAA;AAEA,MAAA,CAAA,mBAAA,CAAA,GAAA,MAAA,YAAA,CAAA,uBAAA,CAAA;AAIA,MAAM,OAAOC,MAAS,CAAA,UAAA,CAAW,QAAS,CAAA,cAAA,CAAe,cAAc,CAAgB,CAAA;AAEvF,IAAK,CAAA,MAAA;AAAA,kBACFC,qBAAA,CAAA,KAAA,CAAM,UAAN,EAAA,EACC,gDAAC,mBAAoB,EAAA,EAAA,MAAA,EAAQ,WAC3B,EAAA,QAAA,kBAAAA,qBAAA,CAAC,aACC,EAAA,EAAA,QAAA,kBAAAA,qBAAA,CAAC,GAAI,EAAA,EAAA,CAAA,EACP,GACF,CACF,EAAA;AACF,CAAA","x_google_ignoreList":[0]}